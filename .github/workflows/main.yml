name: Build-Static-Win64-and-Linux-AppImage

on:
  push:
    branches: [ main, simple ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat
      - name: Install deps
        run: .\vcpkg\vcpkg.exe install sdl2 sdl2-mixer[libflac,libmodplug,mpg123,opusfile] libsamplerate `
          --triplet x64-windows-static-release `
          --overlay-triplets=cmake/triplets
      - name: Build & pack
        run: |
          cmake -B build_vs_64 -S . -DCMAKE_BUILD_TYPE=Release -DENABLE_LTO=ON `
            -DVCPKG_TARGET_TRIPLET="x64-windows-static-release" `
            -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded `
            -DCMAKE_C_FLAGS_RELEASE="/MT /O2 /Ob2 /DNDEBUG /GL /Oy" `
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake
          cmake --build build_vs_64 --config Release --parallel
          cp iwad/cry.wad build_vs_64/src/Release/
      - uses: actions/upload-artifact@v4
        with:
          name: cry-dev-win64
          path: build_vs_64/src/Release/*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ fuse patchelf \
            libsdl2-dev libsdl2-mixer-dev \
            libsamplerate0-dev libflac-dev libmodplug-dev \
            libmpg123-dev libopusfile-dev \
            libx11-dev libxext-dev libxrender-dev libxrandr-dev \
            libxcb1-dev libxcb-render0-dev libxcb-shape0-dev \
            libxcb-xfixes0-dev
      - name: Download linuxdeploy
        run: |
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-appimage/releases/download/continuous/linuxdeploy-plugin-appimage-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage
      - name: Build
        run: |
          cmake -B build_linux -S . -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS_RELEASE="-O3 -march=x86-64-v2 -mtune=generic -flto -fno-math-errno -fomit-frame-pointer -funroll-loops -DNDEBUG"
          cmake --build build_linux --config Release
      - name: Package as AppImage
        run: |
          mkdir -p appdir/usr/bin
          cp build_linux/src/cry appdir/usr/bin/
          cp iwad/cry.wad .
          mkdir -p appdir/usr/share/applications
          cp data/doom.desktop appdir/usr/share/applications/cry.desktop
          mkdir -p appdir/usr/share/icons/hicolor/128x128/apps
          cp data/doom.png appdir/usr/share/icons/hicolor/128x128/apps/cry.png
          ./linuxdeploy-x86_64.AppImage --appdir=appdir --output appimage
          rm -f linuxdeploy*.AppImage
      - uses: actions/upload-artifact@v4
        with:
          name: cry-dev-linux64
          path: |
            **/*.AppImage
            cry.wad
